[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 TouristClust authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"/articles/main_functionality.html","id":"hard-clustering","dir":"Articles","previous_headings":"Clustering","what":"Hard clustering","title":"Functionality of fuzzyclara package","text":"","code":"# TODO replace USArrests by a better dataset (maybe TourIST) cc_hard <- fuzzyclara(data        = USArrests,                        clusters    = 3,                        metric      = \"euclidean\",                        samples     = 1,                        sample_size = NULL,                        type        = \"hard\",                        seed        = 3526,                        verbose     = 0) cc_hard ## Clustering results ##  ## Medoids ## [1] \"New Mexico\"    \"Oklahoma\"      \"New Hampshire\" ##  ## Clustering ##  [1] 2 2 2 3 2 2 3 3 2 2 3 1 2 3 1 3 3 2 1 2 3 2 1 2 3 3 3 2 1 3 2 2 2 1 3 3 3 3 ## [39] 3 2 1 2 2 3 1 3 3 1 1 3 ##  ## Minimum average distance ## [1] 1.180717"},{"path":"/articles/main_functionality.html","id":"fuzzy-clustering","dir":"Articles","previous_headings":"Clustering","what":"Fuzzy clustering","title":"Functionality of fuzzyclara package","text":"","code":"cc_fuzzy <- fuzzyclara(data        = USArrests,                        clusters    = 3,                        metric      = \"euclidean\",                        samples     = 1,                        sample_size = NULL,                        type        = \"fuzzy\",                        m           = 2,                        seed        = 3526,                        verbose     = 0) cc_fuzzy ## Clustering results ##  ## Medoids ## [1] \"Oklahoma\"  \"Idaho\"     \"Tennessee\" ##  ## Clustering ##  [1] 3 3 2 2 3 3 2 2 3 3 2 1 2 2 1 2 2 3 1 3 2 3 1 3 2 1 1 3 1 2 3 3 3 1 2 2 2 2 ## [39] 2 3 1 3 3 2 1 2 2 1 1 2 ##  ## Minimum average weighted distance ## [1] 1.830885"},{"path":"/articles/main_functionality.html","id":"clustering-with-self-defined-distance-function-and-other-distance-functions","dir":"Articles","previous_headings":"Clustering","what":"Clustering with self-defined distance function and other distance functions","title":"Functionality of fuzzyclara package","text":"can also use distance functions proxy package like Gower, Manhattan etc. order specify arguments distance metric (e. g. p Minkowski distance), can use self-defined distance function.","code":"dist_function <- function(x, y) {   sqrt(sum((x - y)^2)) }  cc_dist <- fuzzyclara(data        = USArrests,                       clusters    = 3,                       metric      = dist_function,                       samples     = 1,                       sample_size = NULL,                       type        = \"fuzzy\",                       m           = 2,                       seed        = 3526,                       verbose     = 0) cc_dist ## Clustering results ##  ## Medoids ## [1] \"Oklahoma\"  \"Idaho\"     \"Tennessee\" ##  ## Clustering ##  [1] 3 3 2 2 3 3 2 2 3 3 2 1 2 2 1 2 2 3 1 3 2 3 1 3 2 1 1 3 1 2 3 3 3 1 2 2 2 2 ## [39] 2 3 1 3 3 2 1 2 2 1 1 2 ##  ## Minimum average weighted distance ## [1] 1.830885 cc_manh <- fuzzyclara(data        = USArrests,                        clusters    = 3,                        metric      = \"manhattan\",                        samples     = 1,                        sample_size = NULL,                        type        = \"hard\",                        seed        = 3526,                        verbose     = 0) cc_manh ## Clustering results ##  ## Medoids ## [1] \"New Mexico\"    \"Oklahoma\"      \"New Hampshire\" ##  ## Clustering ##  [1] 2 2 2 3 2 2 1 3 2 2 3 1 2 3 1 3 3 2 1 2 3 2 1 2 3 3 3 2 1 3 2 2 2 1 3 3 3 3 ## [39] 3 2 1 2 2 3 1 3 3 1 1 3 ##  ## Minimum average distance ## [1] 2.011671 dist_mink <- function(x, y) {   proxy::dist(list(x, y), method = \"minkowski\", p = 1) } cc_mink <- fuzzyclara(data        = USArrests,                        clusters    = 3,                        metric      = dist_mink,                        samples     = 1,                        sample_size = NULL,                        type        = \"hard\",                        seed        = 3526,                        verbose     = 0) cc_mink ## Clustering results ##  ## Medoids ## [1] \"New Mexico\"    \"Oklahoma\"      \"New Hampshire\" ##  ## Clustering ##  [1] 2 2 2 3 2 2 1 3 2 2 3 1 2 3 1 3 3 2 1 2 3 2 1 2 3 3 3 2 1 3 2 2 2 1 3 3 3 3 ## [39] 3 2 1 2 2 3 1 3 3 1 1 3 ##  ## Minimum average distance ## [1] 2.011671"},{"path":"/articles/main_functionality.html","id":"select-optimal-number-of-clusters","dir":"Articles","previous_headings":"Clustering","what":"Select optimal number of clusters","title":"Functionality of fuzzyclara package","text":"","code":"cc_number <- evaluate_cluster_numbers(                        data            = USArrests,                        clusters_range  = 2:6,                        metric          = \"euclidean\",                        samples         = 1,                        sample_size     = NULL,                        type            = \"hard\",                        seed            = 3526,                        verbose         = 0) cc_number"},{"path":"/articles/main_functionality.html","id":"plot-of-clustering-results","dir":"Articles","previous_headings":"","what":"Plot of clustering results","title":"Functionality of fuzzyclara package","text":"","code":"# Enrich the USArrest dataset by area and state  USArrests_enriched <- USArrests %>%    mutate(State = as.factor(rownames(USArrests)),          Area  = as.factor(case_when(State %in% c(\"Washington\", \"Oregon\",                  \"California\", \"Nevada\", \"Arizona\", \"Idaho\", \"Montana\",                  \"Wyoming\", \"Colorado\", \"New Mexico\", \"Utah\", \"Hawaii\",                  \"Alaska\") ~ \"West\",                  State %in% c(\"Texas\", \"Oklahoma\", \"Arkansas\", \"Louisiana\",                  \"Mississippi\", \"Alabama\", \"Tennessee\", \"Kentucky\", \"Georgia\",                  \"Florida\", \"South Carolina\", \"North Carolina\", \"Virginia\",                  \"West Virginia\") ~ \"South\",                  State %in% c(\"Kansas\", \"Nebraska\", \"South Dakota\",                  \"North Dakota\", \"Minnesota\", \"Missouri\", \"Iowa\", \"Illinois\",                  \"Indiana\", \"Michigan\", \"Wisconsin\", \"Ohio\") ~ \"Midwest\",                  State %in% c(\"Maine\", \"New Hampshire\", \"New York\",                  \"Massachusetts\", \"Rhode Island\", \"Vermont\", \"Pennsylvania\",                  \"New Jersey\", \"Connecticut\", \"Delaware\", \"Maryland\") ~                    \"Northeast\")))"},{"path":"/articles/main_functionality.html","id":"boxplot","dir":"Articles","previous_headings":"Plot of clustering results","what":"Boxplot","title":"Functionality of fuzzyclara package","text":"","code":"plot(x = cc_hard, data = USArrests_enriched, variable = \"Assault\")"},{"path":"/articles/main_functionality.html","id":"barplot","dir":"Articles","previous_headings":"Plot of clustering results","what":"Barplot","title":"Functionality of fuzzyclara package","text":"","code":"plot(x = cc_hard, data = USArrests_enriched, variable = \"Area\")"},{"path":"/articles/main_functionality.html","id":"wordcloud","dir":"Articles","previous_headings":"Plot of clustering results","what":"Wordcloud","title":"Functionality of fuzzyclara package","text":"","code":"plot(x = cc_hard, data = USArrests_enriched, variable = \"State\",      type = \"wordclouds\")"},{"path":"/articles/main_functionality.html","id":"scatterplot","dir":"Articles","previous_headings":"Plot of clustering results","what":"Scatterplot","title":"Functionality of fuzzyclara package","text":"fuzzy clustering, can focus one clusters plot membership probability:","code":"plot(x = cc_hard, data = USArrests_enriched, type = \"scatterplot\",      x_var = \"Murder\", y_var = \"Assault\") ## `geom_smooth()` using formula 'y ~ x' plot(x = cc_fuzzy, data = USArrests_enriched, type = \"scatterplot\",      x_var = \"Murder\", y_var = \"Assault\",       focus = TRUE) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"scatterplot\",      x_var = \"Murder\", y_var = \"Assault\",       focus = TRUE, focus_clusters = c(1))"},{"path":"/articles/main_functionality.html","id":"pca","dir":"Articles","previous_headings":"Plot of clustering results","what":"PCA","title":"Functionality of fuzzyclara package","text":"fuzzy clustering, can focus one clusters plot membership probability:","code":"plot(x = cc_hard, data = USArrests_enriched, type = \"pca\",      group_by = \"Area\") plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\",      focus = TRUE) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\",      focus = TRUE, focus_clusters = c(1))"},{"path":"/articles/main_functionality.html","id":"silhouette","dir":"Articles","previous_headings":"Plot of clustering results","what":"Silhouette","title":"Functionality of fuzzyclara package","text":"","code":"plot(x = cc_hard, data = USArrests, type = \"silhouette\") ##   cluster size ave.sil.width ## 1       1   10          0.46 ## 2       2   19          0.28 ## 3       3   21          0.28"},{"path":"/articles/main_functionality.html","id":"fuzzy-clustering-threshold-for-membership-scores","dir":"Articles","previous_headings":"Plot of clustering results","what":"Fuzzy clustering: Threshold for membership scores","title":"Functionality of fuzzyclara package","text":"","code":"plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\", variable = \"Assault\", confidence_threshold = 0) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\", variable = \"Assault\", confidence_threshold = 0.5) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"scatterplot\",      x_var = \"Murder\", y_var = \"Assault\", confidence_threshold = 0) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"scatterplot\",      x_var = \"Murder\", y_var = \"Assault\", confidence_threshold = 0.5) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"scatterplot\",      x_var = \"Murder\", y_var = \"Assault\", confidence_threshold = 0.5, plot_all_fuzzy = TRUE) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\",      group_by = \"Area\", confidence_threshold = 0) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\",      group_by = \"Area\", confidence_threshold = 0.5) plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\",      group_by = \"Area\", confidence_threshold = 0.5, plot_all_fuzzy = TRUE)"},{"path":[]},{"path":"/articles/vignette_shiny.html","id":"section-hard-clustering","dir":"Articles","previous_headings":"Clustering","what":"Hard clustering","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"# TODO replace USArrests by a better dataset (maybe TourIST) cc_hard <- fuzzyclara(data        = USArrests,                        clusters    = 3,                        metric      = \"euclidean\",                        samples     = 1,                        sample_size = NULL,                        type        = \"hard\",                        seed        = 3526,                        verbose     = 0) cc_hard ## Clustering results ##  ## Medoids ## [1] \"New Mexico\"    \"Oklahoma\"      \"New Hampshire\" ##  ## Clustering ##  [1] 2 2 2 3 2 2 3 3 2 2 3 1 2 3 1 3 3 2 1 2 3 2 1 2 3 3 3 2 1 3 2 2 2 1 3 3 3 3 ## [39] 3 2 1 2 2 3 1 3 3 1 1 3 ##  ## Minimum average distance ## [1] 1.180717"},{"path":"/articles/vignette_shiny.html","id":"section-fuzzy-clustering","dir":"Articles","previous_headings":"Clustering","what":"Fuzzy clustering","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"cc_fuzzy <- fuzzyclara(data        = USArrests,                        clusters    = 3,                        metric      = \"euclidean\",                        samples     = 1,                        sample_size = NULL,                        type        = \"fuzzy\",                        m           = 2,                        seed        = 3526,                        verbose     = 0) cc_fuzzy ## Clustering results ##  ## Medoids ## [1] \"Oklahoma\"  \"Idaho\"     \"Tennessee\" ##  ## Clustering ##  [1] 3 3 2 2 3 3 2 2 3 3 2 1 2 2 1 2 2 3 1 3 2 3 1 3 2 1 1 3 1 2 3 3 3 1 2 2 2 2 ## [39] 2 3 1 3 3 2 1 2 2 1 1 2 ##  ## Minimum average weighted distance ## [1] 1.830885"},{"path":"/articles/vignette_shiny.html","id":"section-clustering-with-self-defined-distance-function-and-other-distance-functions","dir":"Articles","previous_headings":"Clustering","what":"Clustering with self-defined distance function and other distance functions","title":"Functionality of fuzzyclara package (interactive)","text":"can also use distance functions proxy package like Gower, Manhattan etc. order specify arguments distance metric (e. g. p Minkowski distance), can use self-defined distance function.","code":"dist_function <- function(x, y) {   sqrt(sum((x - y)^2)) }  cc_dist <- fuzzyclara(data        = USArrests,                       clusters    = 3,                       metric      = dist_function,                       samples     = 1,                       sample_size = NULL,                       type        = \"fuzzy\",                       m           = 2,                       seed        = 3526,                       verbose     = 0) cc_dist ## Clustering results ##  ## Medoids ## [1] \"Oklahoma\"  \"Idaho\"     \"Tennessee\" ##  ## Clustering ##  [1] 3 3 2 2 3 3 2 2 3 3 2 1 2 2 1 2 2 3 1 3 2 3 1 3 2 1 1 3 1 2 3 3 3 1 2 2 2 2 ## [39] 2 3 1 3 3 2 1 2 2 1 1 2 ##  ## Minimum average weighted distance ## [1] 1.830885 cc_manh <- fuzzyclara(data        = USArrests,                        clusters    = 3,                        metric      = \"manhattan\",                        samples     = 1,                        sample_size = NULL,                        type        = \"hard\",                        seed        = 3526,                        verbose     = 0) cc_manh ## Clustering results ##  ## Medoids ## [1] \"New Mexico\"    \"Oklahoma\"      \"New Hampshire\" ##  ## Clustering ##  [1] 2 2 2 3 2 2 1 3 2 2 3 1 2 3 1 3 3 2 1 2 3 2 1 2 3 3 3 2 1 3 2 2 2 1 3 3 3 3 ## [39] 3 2 1 2 2 3 1 3 3 1 1 3 ##  ## Minimum average distance ## [1] 2.011671 dist_mink <- function(x, y) {   proxy::dist(list(x, y), method = \"minkowski\", p = 1) } cc_mink <- fuzzyclara(data        = USArrests,                        clusters    = 3,                        metric      = dist_mink,                        samples     = 1,                        sample_size = NULL,                        type        = \"hard\",                        seed        = 3526,                        verbose     = 0) cc_mink ## Clustering results ##  ## Medoids ## [1] \"New Mexico\"    \"Oklahoma\"      \"New Hampshire\" ##  ## Clustering ##  [1] 2 2 2 3 2 2 1 3 2 2 3 1 2 3 1 3 3 2 1 2 3 2 1 2 3 3 3 2 1 3 2 2 2 1 3 3 3 3 ## [39] 3 2 1 2 2 3 1 3 3 1 1 3 ##  ## Minimum average distance ## [1] 2.011671"},{"path":"/articles/vignette_shiny.html","id":"section-select-optimal-number-of-clusters","dir":"Articles","previous_headings":"Clustering","what":"Select optimal number of clusters","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"cc_number <- evaluate_cluster_numbers(                        data            = USArrests,                        clusters_range  = 2:6,                        metric          = \"euclidean\",                        samples         = 1,                        sample_size     = NULL,                        type            = \"hard\",                        seed            = 3526,                        verbose         = 0) cc_number"},{"path":"/articles/vignette_shiny.html","id":"section-plot-of-clustering-results","dir":"Articles","previous_headings":"","what":"Plot of clustering results","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"# Enrich the USArrest dataset by area and state  USArrests_enriched <- USArrests %>%    mutate(State = as.factor(rownames(USArrests)),          Area  = as.factor(case_when(State %in% c(\"Washington\", \"Oregon\",                  \"California\", \"Nevada\", \"Arizona\", \"Idaho\", \"Montana\",                  \"Wyoming\", \"Colorado\", \"New Mexico\", \"Utah\", \"Hawaii\",                  \"Alaska\") ~ \"West\",                  State %in% c(\"Texas\", \"Oklahoma\", \"Arkansas\", \"Louisiana\",                  \"Mississippi\", \"Alabama\", \"Tennessee\", \"Kentucky\", \"Georgia\",                  \"Florida\", \"South Carolina\", \"North Carolina\", \"Virginia\",                  \"West Virginia\") ~ \"South\",                  State %in% c(\"Kansas\", \"Nebraska\", \"South Dakota\",                  \"North Dakota\", \"Minnesota\", \"Missouri\", \"Iowa\", \"Illinois\",                  \"Indiana\", \"Michigan\", \"Wisconsin\", \"Ohio\") ~ \"Midwest\",                  State %in% c(\"Maine\", \"New Hampshire\", \"New York\",                  \"Massachusetts\", \"Rhode Island\", \"Vermont\", \"Pennsylvania\",                  \"New Jersey\", \"Connecticut\", \"Delaware\", \"Maryland\") ~                    \"Northeast\")))"},{"path":"/articles/vignette_shiny.html","id":"section-boxplot","dir":"Articles","previous_headings":"Plot of clustering results","what":"Boxplot","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"plot(x = cc_fuzzy, data = USArrests_enriched, variable = \"Assault\")"},{"path":"/articles/vignette_shiny.html","id":"section-barplot","dir":"Articles","previous_headings":"Plot of clustering results","what":"Barplot","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"plot(x = cc_fuzzy, data = USArrests_enriched, variable = \"Area\")"},{"path":"/articles/vignette_shiny.html","id":"section-wordcloud","dir":"Articles","previous_headings":"Plot of clustering results","what":"Wordcloud","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"plot(x = cc_fuzzy, data = USArrests_enriched, variable = \"State\",      type = \"wordclouds\")"},{"path":"/articles/vignette_shiny.html","id":"section-scatterplot","dir":"Articles","previous_headings":"Plot of clustering results","what":"Scatterplot","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"plot(x = cc_fuzzy, data = USArrests_enriched, type = \"scatterplot\",      x_var = \"Murder\", y_var = \"Assault\") ## `geom_smooth()` using formula 'y ~ x' plot(x = cc_fuzzy, data = USArrests_enriched, type = \"scatterplot\",      x_var = \"Murder\", y_var = \"Assault\",       focus = TRUE)"},{"path":"/articles/vignette_shiny.html","id":"section-pca","dir":"Articles","previous_headings":"Plot of clustering results","what":"PCA","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\",      group_by = \"Area\") plot(x = cc_fuzzy, data = USArrests_enriched, type = \"pca\",      focus = TRUE)"},{"path":"/articles/vignette_shiny.html","id":"section-silhouette","dir":"Articles","previous_headings":"Plot of clustering results","what":"Silhouette","title":"Functionality of fuzzyclara package (interactive)","text":"","code":"plot(x = cc_fuzzy, data = USArrests, type = \"silhouette\") ##   cluster size ave.sil.width ## 1       1   12          0.47 ## 2       2   21          0.21 ## 3       3   17          0.24"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maximilian Weigert. Author, maintainer. Alexander Bauer. Author. Jana Gauss. Author. Asmik Nalmpatian. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Weigert M, Bauer , Gauss J (2022). fuzzyclara: Routines Efficient Hard Fuzzy Clustering based CLARA algorithm. R package version 0.1, https://MaxWeigert.github.io/fuzzyclara/.","code":"@Manual{,   title = {fuzzyclara: Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm},   author = {Maximilian Weigert and Alexander Bauer and Jana Gauss},   year = {2022},   note = {R package version 0.1},   url = {https://MaxWeigert.github.io/fuzzyclara/}, }"},{"path":"/index.html","id":"fuzzyclara-","dir":"","previous_headings":"","what":"Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm","title":"Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm","text":"Efficient fuzzy clustering based CLARA algorithm Authors: Maximilian Weigert, Alexander Bauer, Jana Gauss Contributors: Asmik Nalmpatian Version: 0.1","code":""},{"path":"/index.html","id":"aim-of-this-package","dir":"","previous_headings":"","what":"Aim of this Package","title":"Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm","text":"general text contrast software packages, fuzzyclara …","code":""},{"path":"/index.html","id":"main-functionality","dir":"","previous_headings":"","what":"Main Functionality","title":"Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm","text":"…","code":""},{"path":"/index.html","id":"documentation-and-useful-materials","dir":"","previous_headings":"","what":"Documentation and Useful Materials","title":"Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm","text":"get overview functionalities package, check package vignette.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm","text":"current version GitHub can installed via","code":"devtools::install_github(\"MaxWeigert/fuzzyclara\")"},{"path":"/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to Contribute","title":"Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm","text":"encounter problems package, find bugs suggestions additional functionalities please open GitHub issue. Alternatively, feel free contact us directly via email. Contributions (via pull requests otherwise) welcome. open pull request share updates us, please make sure unit tests pass without errors warning messages. can run unit tests calling","code":"devtools::test()"},{"path":"/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Routines for Efficient Hard and Fuzzy Clustering based on the CLARA algorithm","text":"…","code":""},{"path":"/reference/assign_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Assign a cluster to each observation of the entire dataset — assign_cluster","title":"Assign a cluster to each observation of the entire dataset — assign_cluster","text":"Function assign cluster observation entire dataset selecting closest medoid","code":""},{"path":"/reference/assign_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assign a cluster to each observation of the entire dataset — assign_cluster","text":"","code":"assign_cluster(   data,   metric,   medoids,   dist_matrix = NULL,   type = \"hard\",   m = 2,   return_distMatrix = FALSE,   return_data_medoids = FALSE )"},{"path":"/reference/assign_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assign a cluster to each observation of the entire dataset — assign_cluster","text":"data Entire data.frame metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details. medoids Medoids obtained clustering solution data sample dist_matrix Optional dissimilarity matrix (defaults NULL) type One c(\"hard\",\"fuzzy\"), specifying type clustering performed. m Fuzziness exponent (type = \"fuzzy\"), numeric minimum 1. Defaults 2. return_distMatrix Indicator distances cluster medoids returned. Defaults FALSE. return_data_medoids Indicator medoid data returned. Defaults FALSE.","code":""},{"path":"/reference/assign_cluster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Assign a cluster to each observation of the entire dataset — assign_cluster","text":"List information cluster results (medoid, cluster assignment, average distance closest medoid (weighted average distance closest medoid case fuzzy clustering))","code":""},{"path":"/reference/calculate_memb_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate membership score of one observation for each medoid — calculate_memb_score","title":"Calculate membership score of one observation for each medoid — calculate_memb_score","text":"Function calculate membership score one observation medoid based distance observation medoids","code":""},{"path":"/reference/calculate_memb_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate membership score of one observation for each medoid — calculate_memb_score","text":"","code":"calculate_memb_score(dist_med, m = 2)"},{"path":"/reference/calculate_memb_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate membership score of one observation for each medoid — calculate_memb_score","text":"dist_med Vector distances medoids m Fuzziness exponent, numeric minimum 1. Defaults 2.","code":""},{"path":"/reference/calculate_memb_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate membership score of one observation for each medoid — calculate_memb_score","text":"List membership scores one observation","code":""},{"path":"/reference/clara_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function barplot — clara_barplot","title":"Plot function barplot — clara_barplot","text":"Function plot barplot","code":""},{"path":"/reference/clara_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function barplot — clara_barplot","text":"","code":"clara_barplot(   x,   data,   variable,   group_by = NULL,   na.omit = FALSE,   confidence_threshold = 0 )"},{"path":"/reference/clara_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function barplot — clara_barplot","text":"x object class \"fuzzyclara\" data Prepared data.frame (contains cluster variable, observations already filtered threshold (fuzzy)) variable Name variable plot group_by Optional grouping variable na.omit missing values excluded plotting? Defaults FALSE. confidence_threshold Threshold fuzzy clustering observations plotted. Must number 0 1. Defaults 0.","code":""},{"path":"/reference/clara_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function barplot — clara_barplot","text":"barplot","code":""},{"path":"/reference/clara_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function boxplot — clara_boxplot","title":"Plot function boxplot — clara_boxplot","text":"Function plot boxplot","code":""},{"path":"/reference/clara_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function boxplot — clara_boxplot","text":"","code":"clara_boxplot(   x,   data,   variable,   group_by = NULL,   na.omit = FALSE,   confidence_threshold = 0 )"},{"path":"/reference/clara_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function boxplot — clara_boxplot","text":"x object class \"fuzzyclara\" data Prepared data.frame (contains cluster variable, observations already filtered threshold (fuzzy)) variable Name variable plot group_by Optional grouping variable na.omit missing values excluded plotting? Defaults FALSE. confidence_threshold Threshold fuzzy clustering observations plotted. Must number 0 1. Defaults 0.","code":""},{"path":"/reference/clara_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function boxplot — clara_boxplot","text":"boxplot","code":""},{"path":"/reference/clara_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function PCA — clara_pca","title":"Plot function PCA — clara_pca","text":"Function plot PCA results","code":""},{"path":"/reference/clara_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function PCA — clara_pca","text":"","code":"clara_pca(   x,   data,   group_by = NULL,   plot_all_fuzzy = TRUE,   confidence_threshold = 0,   alpha_fuzzy = 0.4,   focus = FALSE,   focus_clusters = NULL )"},{"path":"/reference/clara_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function PCA — clara_pca","text":"x object class \"fuzzyclara\" data data.frame matrix used clustering group_by Optional grouping variable plot_all_fuzzy fuzzy clustering threshold: observations threshold plotted transparent? Defaults TRUE. confidence_threshold Threshold fuzzy clustering observations plotted. Must number 0 1. Defaults 0. alpha_fuzzy Alpha value observations threshold, relevant plot_all_fuzzy = TRUE. Defaults 0.4. focus fuzzy clustering, focus clusters given variable focus_clusters plot observations based probability belonging respective cluster. Defaults FALSE. focus_clusters Optional vector integers focus specific clusters.","code":""},{"path":"/reference/clara_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function PCA — clara_pca","text":"PCA plot","code":""},{"path":"/reference/clara_scatterplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function scatterplot — clara_scatterplot","title":"Plot function scatterplot — clara_scatterplot","text":"Function plot scatterplot","code":""},{"path":"/reference/clara_scatterplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function scatterplot — clara_scatterplot","text":"","code":"clara_scatterplot(   x,   data,   x_var,   y_var,   plot_all_fuzzy = TRUE,   confidence_threshold = 0,   alpha_fuzzy = 0.4,   focus = FALSE,   focus_clusters = NULL,   na.omit = FALSE )"},{"path":"/reference/clara_scatterplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function scatterplot — clara_scatterplot","text":"x object class \"fuzzyclara\" data data.frame matrix used clustering x_var, y_var Names x y variable plot_all_fuzzy fuzzy clustering threshold: observations threshold plotted transparent? Defaults TRUE. confidence_threshold Threshold fuzzy clustering observations plotted. Must number 0 1. Defaults 0. alpha_fuzzy Alpha value observations threshold, relevant fuzzy clustering focus = FALSE. Defaults 0.4. focus fuzzy clustering, focus clusters given variable focus_clusters plot observations based probability belonging respective cluster. Defaults FALSE. focus_clusters Optional vector integers focus specific clusters na.omit missing values excluded plotting? Defaults FALSE.","code":""},{"path":"/reference/clara_scatterplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function scatterplot — clara_scatterplot","text":"scatterplot","code":""},{"path":"/reference/clara_silhouette.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function silhouette — clara_silhouette","title":"Plot function silhouette — clara_silhouette","text":"Function plot scatterplot","code":""},{"path":"/reference/clara_silhouette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function silhouette — clara_silhouette","text":"","code":"clara_silhouette(   x,   data,   metric = \"euclidean\",   silhouette_subsample = FALSE,   scale_sil = TRUE,   confidence_threshold = 0 )"},{"path":"/reference/clara_silhouette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function silhouette — clara_silhouette","text":"x object class \"fuzzyclara\" data data.frame matrix used clustering metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". Irrelevant silhouette_subsample TRUE. silhouette_subsample Use subsample 'x' silhouette plot instead samples? Defaults FALSE. scale_sil Scale numeric variables silhouette plot? Defaults TRUE. Irrelevant silhouette_subsample TRUE. confidence_threshold Threshold fuzzy clustering observations plotted. Must number 0 1. Defaults 0.","code":""},{"path":"/reference/clara_silhouette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function silhouette — clara_silhouette","text":"silhouette plot","code":""},{"path":"/reference/clara_wordcloud.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function wordcloud — clara_wordcloud","title":"Plot function wordcloud — clara_wordcloud","text":"Function plot wordcloud","code":""},{"path":"/reference/clara_wordcloud.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function wordcloud — clara_wordcloud","text":"","code":"clara_wordcloud(x, data, variable, na.omit = na.omit, seed = 42)"},{"path":"/reference/clara_wordcloud.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function wordcloud — clara_wordcloud","text":"x object class \"fuzzyclara\" data Prepared data.frame (contains cluster variable, observations already filtered threshold (fuzzy)) variable Name variable plot na.omit missing values excluded plotting? Defaults FALSE. seed Random number seed. Defaults 42.","code":""},{"path":"/reference/clara_wordcloud.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot function wordcloud — clara_wordcloud","text":"wordcloud plot","code":""},{"path":"/reference/clustering_clara.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform CLARA clustering algorithm — clustering_clara","title":"Perform CLARA clustering algorithm — clustering_clara","text":"Function perform CLARA clustering hard fuzzy way. function can either called using common dissimilarity metric self-defined distance function.","code":""},{"path":"/reference/clustering_clara.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform CLARA clustering algorithm — clustering_clara","text":"","code":"clustering_clara(   data,   clusters = 5,   metric = \"euclidean\",   samples = 10,   sample_size = NULL,   type = \"hard\",   cores = 1,   seed = 1234,   m = 2,   verbose = 1,   build = FALSE,   ... )"},{"path":"/reference/clustering_clara.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform CLARA clustering algorithm — clustering_clara","text":"data data.frame clustered clusters Number clusters. Defaults 5. metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details. samples Number subsamples sample_size Number observations belonging sample. NULL (default), minimum nrow(data) 40 + clusters * 2 used sample size. type One c(\"hard\",\"fuzzy\"), specifying type clustering performed. cores Numbers cores computation. cores > 1 implies parallel call. Defaults 1. seed Random number seed. Defaults 1234. m Fuzziness exponent (type = \"fuzzy\"), numeric minimum 1. Defaults 2. verbose Can set integers 0 2 control level detail printed diagnostic messages. Higher numbers lead detailed messages. Defaults 1. build Additional build algorithm choose initial medoids (relevant type = \"fuzzy\". Default FALSE.) ... Additional arguments passed main clustering algorithm proxy::dist calculation distance matrix (pam vegclust)","code":""},{"path":"/reference/clustering_clara.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform CLARA clustering algorithm — clustering_clara","text":"Object class fuzzyclara","code":""},{"path":"/reference/clustering_clara.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform CLARA clustering algorithm — clustering_clara","text":"clustering run mulitple cores, verbose messages printed file clustering_progress.log (verbose > 0).","code":""},{"path":"/reference/clustering_clara.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform CLARA clustering algorithm — clustering_clara","text":"TODO add CLARA paper","code":""},{"path":"/reference/clustering_clarans.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform CLARANS clustering — clustering_clarans","title":"Perform CLARANS clustering — clustering_clarans","text":"Function perform CLARANS clustering hard fuzzy way. function can either called using common dissimilarity metric self-defined distance function.","code":""},{"path":"/reference/clustering_clarans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform CLARANS clustering — clustering_clarans","text":"","code":"clustering_clarans(   data,   clusters = 5,   metric = \"euclidean\",   type = \"hard\",   num_local = 5,   max_neighbors = 100,   cores = 1,   seed = 1234,   m = 2,   verbose = 1,   ... )"},{"path":"/reference/clustering_clarans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform CLARANS clustering — clustering_clarans","text":"data data.frame clustered clusters Number clusters. Defaults 5. metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details. type One c(\"hard\",\"fuzzy\"), specifying type clustering performed. num_local Number clustering iterations. Defaults 5. (pam vegclust) max_neighbors Maximum number randomized medoid searches cluster. Defaults 100. cores Numbers cores computation. cores > 1 implies parallel call. Defaults 1. seed Random number seed. Defaults 1234. m Fuzziness exponent (type = \"fuzzy\"), numeric minimum 1. Defaults 2. verbose Can set integers 0 2 control level detail printed diagnostic messages. Higher numbers lead detailed messages. Defaults 1. ... Additional arguments passed main clustering algorithm proxy::dist calculation distance matrix (pam vegclust)","code":""},{"path":"/reference/clustering_clarans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform CLARANS clustering — clustering_clarans","text":"Object class fuzzyclara","code":""},{"path":"/reference/clustering_clarans.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform CLARANS clustering — clustering_clarans","text":"clustering run mulitple cores, verbose messages printed file clustering_progress.log (verbose > 0).","code":""},{"path":"/reference/clustering_clarans.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform CLARANS clustering — clustering_clarans","text":"TODO add CLARANS paper","code":""},{"path":"/reference/clustering_local.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a local iteration of CLARANS clustering — clustering_local","title":"Perform a local iteration of CLARANS clustering — clustering_local","text":"Function perform local iteration CLARANS clustering algorithm hard fuzzy way. function can either called using common dissimilarity metric self-defined distance function.","code":""},{"path":"/reference/clustering_local.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a local iteration of CLARANS clustering — clustering_local","text":"","code":"clustering_local(   data,   sample_local,   clusters = 5,   metric = \"euclidean\",   max_neighbors = 100,   type = \"hard\",   m = 2,   verbose = 1,   verbose_toLogFile = FALSE,   ... )"},{"path":"/reference/clustering_local.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a local iteration of CLARANS clustering — clustering_local","text":"data data.frame clustered sample_local list containing information pairs medoids non-medoids tested swapping well starting medoids algorithm clusters Number clusters. Defaults 5. metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details. max_neighbors Maximum number randomized medoid searches cluster (algorithm = \"clarans\") type One c(\"hard\",\"fuzzy\"), specifying type clustering performed. m Fuzziness exponent (type = \"fuzzy\"), numeric minimum 1. Defaults 2. verbose Can set integers 0 2 control level detail printed diagnostic messages. Higher numbers lead detailed messages. Defaults 1. verbose_toLogFile TRUE, diagnostic messages printed log file clustering_progress.log. Defaults FALSE. ... Additional arguments passed main clustering algorithm (pam vegclust)","code":""},{"path":"/reference/clustering_local.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a local iteration of CLARANS clustering — clustering_local","text":"Clustering solution data sample","code":""},{"path":"/reference/clustering_local.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a local iteration of CLARANS clustering — clustering_local","text":"TODO add CLARANS paper","code":""},{"path":"/reference/clustering_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform clustering algorithm on a data sample — clustering_sample","title":"Perform clustering algorithm on a data sample — clustering_sample","text":"Function perform clara clustering algorithm hard fuzzy way. function can either performed using common dissimilarity metric self-defined distance function.","code":""},{"path":"/reference/clustering_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform clustering algorithm on a data sample — clustering_sample","text":"","code":"clustering_sample(   data,   sample_ids,   dist,   clusters = 5,   metric = \"euclidean\",   sample_size = NULL,   type = \"hard\",   m = 2,   verbose = 1,   verbose_toLogFile = FALSE,   build = FALSE,   ... )"},{"path":"/reference/clustering_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform clustering algorithm on a data sample — clustering_sample","text":"data data.frame clustered sample_ids ids sample's observations dist Dissimilarity matrix subsample clusters Number clusters. Defaults 5. metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details. sample_size Number observations belonging sample type One c(\"hard\",\"fuzzy\"), specifying type clustering performed. m Fuzziness exponent (type = \"fuzzy\"), numeric minimum 1. Defaults 2. verbose Can set integers 0 2 control level detail printed diagnostic messages. Higher numbers lead detailed messages. Defaults 1. verbose_toLogFile TRUE, diagnostic messages printed log file clustering_progress.log. Defaults FALSE. build Additional build algorithm choose initial medoids (relevant type = \"fuzzy\". Default FALSE.) ... Additional arguments passed main clustering algorithm (pam vegclust)","code":""},{"path":"/reference/clustering_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform clustering algorithm on a data sample — clustering_sample","text":"Clustering solution data sample","code":""},{"path":"/reference/compute_distance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the dissimilarity matrix for a data sample — compute_distance_matrix","title":"Compute the dissimilarity matrix for a data sample — compute_distance_matrix","text":"Function compute dissimilarity matrix based specified metric","code":""},{"path":"/reference/compute_distance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the dissimilarity matrix for a data sample — compute_distance_matrix","text":"","code":"compute_distance_matrix(data, sample_ids, metric = \"euclidean\")"},{"path":"/reference/compute_distance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the dissimilarity matrix for a data sample — compute_distance_matrix","text":"data Sample data.frame clustered sample_ids ids sample's observations metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details.","code":""},{"path":"/reference/compute_distance_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the dissimilarity matrix for a data sample — compute_distance_matrix","text":"Dissimilarity matrix data sample","code":""},{"path":"/reference/evaluate_cluster_numbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of the selection criterion for different cluster numbers — evaluate_cluster_numbers","title":"Visualization of the selection criterion for different cluster numbers — evaluate_cluster_numbers","text":"Function provide graphical visualization selecting optimal number clusters. function performs clustering range potential numbers clusters. optional graphical visualization shows minimal (weighted) average distance every cluster numbers. Detailed fuzzyclara clustering results can returned return_results = TRUE. clara clustering, samples used numbers clusters.","code":""},{"path":"/reference/evaluate_cluster_numbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of the selection criterion for different cluster numbers — evaluate_cluster_numbers","text":"","code":"evaluate_cluster_numbers(   data,   clusters_range = 2:5,   metric = \"euclidean\",   algorithm = \"clara\",   samples = 10,   sample_size = NULL,   num_local = 5,   max_neighbors = 100,   type = \"hard\",   cores = 1,   seed = 1234,   m = 2,   scale = TRUE,   build = FALSE,   verbose = 1,   plot = TRUE,   return_results = FALSE,   ... )"},{"path":"/reference/evaluate_cluster_numbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of the selection criterion for different cluster numbers — evaluate_cluster_numbers","text":"data data.frame clustered clusters_range Evaluated range number clusters. Defaults 2:5. metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details. algorithm One c(\"clara\",\"clarans\") samples Number subsamples sample_size Number observations belonging sample. NULL (default), minimum nrow(data) 40 + clusters * 2 used sample size. num_local Number clustering iterations (algorithm = \"clarans\"). max_neighbors Maximum number randomized medoid searches cluster (algorithm = \"clarans\") type One c(\"hard\",\"fuzzy\"), specifying type clustering performed. cores Numbers cores computation. cores > 1 implies parallel call. Defaults 1. seed Random number seed. Defaults 1234. m Fuzziness exponent (type = \"fuzzy\"), numeric minimum 1. Defaults 2. scale Scale numeric variables distance matrix calculation? Default TRUE build Additional build algorithm choose initial medoids (relevant type = \"fuzzy\". Default FALSE.) verbose Can set integers 0 2 control level detail printed diagnostic messages. Higher numbers lead detailed messages. Defaults 1. plot plot minimum distances returned? Defaults TRUE. return_results Indicator clustering results (\"fuzzyclara\" objects) returned list. Defaults FALSE. ... Additional arguments passed main clustering algorithm call fuzzyclara.","code":""},{"path":"/reference/evaluate_cluster_numbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of the selection criterion for different cluster numbers — evaluate_cluster_numbers","text":"Object class \"fuzzyclara\"","code":""},{"path":"/reference/fuzzyclara.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform clustering — fuzzyclara","title":"Perform clustering — fuzzyclara","text":"Function perform cluster analysis hard fuzzy way. function can either performed using common dissimilarity metric self-defined distance function.","code":""},{"path":"/reference/fuzzyclara.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform clustering — fuzzyclara","text":"","code":"fuzzyclara(   data,   clusters = 5,   metric = \"euclidean\",   algorithm = \"clara\",   samples = 10,   sample_size = NULL,   max_neighbors = 100,   num_local = 10,   type = \"hard\",   cores = 1,   seed = 1234,   m = 2,   verbose = 1,   scale = TRUE,   build = FALSE,   ... )"},{"path":"/reference/fuzzyclara.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform clustering — fuzzyclara","text":"data data.frame matrix clustered clusters Number clusters. Defaults 5. metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details. algorithm One c(\"clara\",\"clarans\") samples Number subsamples (algorithm = \"clara\") sample_size Number observations belonging sample. NULL (default), minimum nrow(data) 40 + clusters * 2 used sample size. (algorithm = \"clara\") max_neighbors Maximum number randomized medoid searches cluster (algorithm = \"clarans\") num_local Number clustering iterations (algorithm = \"clarans\") type One c(\"hard\",\"fuzzy\"), specifying type clustering performed. cores Numbers cores computation. cores > 1 implies parallel call. Defaults 1. seed Random number seed. Defaults 1234. m Fuzziness exponent (type = \"fuzzy\"), numeric minimum 1. Defaults 2. verbose Can set integers 0 2 control level detail printed diagnostic messages. Higher numbers lead detailed messages. Defaults 1. scale Scale numeric variables distance matrix calculation? Default TRUE build Additional build algorithm choose initial medoids (relevant type = \"fuzzy\". Default FALSE.) ... Additional arguments passed main clustering algorithm proxy::dist calculation distance matrix (pam vegclust)","code":""},{"path":"/reference/fuzzyclara.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform clustering — fuzzyclara","text":"Object class \"fuzzyclara\"","code":""},{"path":"/reference/fuzzyclara.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform clustering — fuzzyclara","text":"clustering run mulitple cores, verbose messages printed file clustering_progress.log (verbose > 0).","code":""},{"path":"/reference/fuzzyclara.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform clustering — fuzzyclara","text":"TODO add CLARA CLARANS papers, maybe something else?","code":""},{"path":"/reference/perform_sample_clustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform pam or vegclust clustering on a data sample — perform_sample_clustering","title":"Perform pam or vegclust clustering on a data sample — perform_sample_clustering","text":"Function perform pam hard fuzzy way data sample","code":""},{"path":"/reference/perform_sample_clustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform pam or vegclust clustering on a data sample — perform_sample_clustering","text":"","code":"perform_sample_clustering(   dist,   data,   clusters,   type,   metric,   names,   m = 2,   build = FALSE,   verbose = 1,   verbose_toLogFile = FALSE,   ... )"},{"path":"/reference/perform_sample_clustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform pam or vegclust clustering on a data sample — perform_sample_clustering","text":"dist Dissimilarity matrix data Data sample clusters Number clusters type Hard fuzzy clustering metric character specifying predefined dissimilarity metric (like \"euclidean\" \"manhattan\") self-defined dissimilarity function. Defaults \"euclidean\". passed argument method dist, check ?proxy::dist full details. names Vector names observations m Fuzziness exponent (type = fuzzy) build Additional build algorithm choose initial medoids (relevant type = \"fuzzy\". Default FALSE.) verbose Can set integers 0 2 control level detail printed diagnostic messages. Higher numbers lead detailed messages. Defaults 1. verbose_toLogFile TRUE, diagnostic messages printed log file clustering_progress.log. Defaults FALSE. ... Additional arguments passed main clustering algorithm (pam vegclust)","code":""},{"path":"/reference/perform_sample_clustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform pam or vegclust clustering on a data sample — perform_sample_clustering","text":"List information cluster results (medoid cluster assignment)","code":""},{"path":"/reference/plot.fuzzyclara.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of clustering solution by variables — plot.fuzzyclara","title":"Visualization of clustering solution by variables — plot.fuzzyclara","text":"Function provide graphical visualization distribution","code":""},{"path":"/reference/plot.fuzzyclara.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualization of clustering solution by variables — plot.fuzzyclara","text":"","code":"# S3 method for fuzzyclara plot(   x,   data,   type = NULL,   variable = NULL,   na.omit = FALSE,   confidence_threshold = 0,   ... )"},{"path":"/reference/plot.fuzzyclara.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualization of clustering solution by variables — plot.fuzzyclara","text":"x object class \"fuzzyclara\" data data.frame matrix used clustering type, variable Type plot. One c(\"barplot\",\"boxplot\",\"wordclouds\", \"silhouette\",\"pca\",\"scatterplot\"). Defaults NULL, either plots barplot boxplot, depending class variable. na.omit missing values excluded plotting? Defaults FALSE. confidence_threshold Threshold fuzzy clustering observations plotted. Must number 0 1. Defaults 0. ... arguments internal plot functions.","code":""},{"path":"/reference/plot.fuzzyclara.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualization of clustering solution by variables — plot.fuzzyclara","text":"Clustering plot","code":""},{"path":"/reference/predict.fuzzyclara.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction of cluster assignments — predict.fuzzyclara","title":"Prediction of cluster assignments — predict.fuzzyclara","text":"Function predict cluster assignments","code":""},{"path":"/reference/predict.fuzzyclara.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction of cluster assignments — predict.fuzzyclara","text":"","code":"# S3 method for fuzzyclara predict(object, newdata, ...)"},{"path":"/reference/predict.fuzzyclara.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction of cluster assignments — predict.fuzzyclara","text":"object object class \"fuzzyclara\" newdata data.frame look variables predict ... arguments predict functions","code":""},{"path":"/reference/predict.fuzzyclara.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction of cluster assignments — predict.fuzzyclara","text":"clustering plot tibble","code":""},{"path":"/reference/print.fuzzyclara.html","id":null,"dir":"Reference","previous_headings":"","what":"Print output of ","title":"Print output of ","text":"Function provide graphical visualization distribution","code":""},{"path":"/reference/print.fuzzyclara.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print output of ","text":"","code":"# S3 method for fuzzyclara print(x, ...)"},{"path":"/reference/print.fuzzyclara.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print output of ","text":"x object class \"fuzzyclara\" ... additional arguments","code":""},{"path":"/reference/print.fuzzyclara.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print output of ","text":"printed output","code":""},{"path":"/reference/print_logMessage.html","id":null,"dir":"Reference","previous_headings":"","what":"Print diagnostic messages to console or log file — print_logMessage","title":"Print diagnostic messages to console or log file — print_logMessage","text":"Print diagnostic messages console log file","code":""},{"path":"/reference/print_logMessage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print diagnostic messages to console or log file — print_logMessage","text":"","code":"print_logMessage(message, verbose_toLogFile = FALSE, reset_logFile = FALSE)"},{"path":"/reference/print_logMessage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print diagnostic messages to console or log file — print_logMessage","text":"message Diagnostic message character verbose_toLogFile TRUE, diagnostic messages printed log file clustering_progress.log. Defaults FALSE. reset_logFile TRUE, log file clustering_progress.log newly created current working directory, potential previous version deleted. Defaults FALSE.","code":""},{"path":"/news/index.html","id":"fuzzyclara-100-2022-09","dir":"Changelog","previous_headings":"","what":"fuzzyclara 1.0.0 (2022-09)","title":"fuzzyclara 1.0.0 (2022-09)","text":"First stable package version","code":""}]
